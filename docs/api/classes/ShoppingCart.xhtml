<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - ShoppingCart</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">ShoppingCart</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/code/api/ShoppingCart.php.xhtml#line37">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>ShoppingCart</h1>
        <h4>ShoppingCart - provides a global way to interface with the cart (current order).</h4>
        <p>This can be used in other code by calling $cart = ShoppingCart::singleton();<br/><br/>The shopping cart can be accessed as an order handler from the back-end<br/>(e.g. when creating an order programmatically), while the accompagnying controller<br/>is used by web-users to manipulate their order.<br/><br/>A bunch of core functions are also stored in the order itself.<br/>Methods and variables are in the shopping cart if they are relevant<br/>only before (and while) the order is placed (e.g. latest update message),<br/>and others are in the order because they are relevant even after the<br/>order has been submitted (e.g. Total Cost).<br/><br/>Key methods:<br/><br/>//get Cart<br/>$myCart = ShoppingCart::singleton();<br/><br/>//get order<br/>$myOrder = ShoppingCart::current_order();<br/><br/>//view order (from another controller)<br/>$this-&gt;redirect(ShoppingCart::current_order()-&gt;Link());<br/><br/>//add item to cart<br/>ShoppingCart::singleton()-&gt;addBuyable($myProduct);</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ShoppingCart
                extends Object
            {<br/><ul class="none"><li>// members</li><li>private static <span title="Array">Array</span> <a href="#members">$session_variable_names</a> =
                        ;
                    </li><li>private static <span title="Object">Object</span> <a href="#members">$singletoncart</a> =
                        null;
                    </li><li>protected <span title="Array">Array</span> <a href="#members">$messages</a> =
                        ;
                    </li><li>protected <span title="Object">Object</span> <a href="#members">$order</a> =
                        null;
                    </li><li>protected <span title="Boolean">Boolean</span> <a href="#members">$requireSavedOrder</a> =
                        false;
                    </li></ul><ul class="none"><li>// methods</li><li>public static ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/singleton.xhtml">singleton</a>()
                    </li><li>public static ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/current_order.xhtml">current_order</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/currentOrder.xhtml">currentOrder</a>()
                    </li><li>public ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/Link.xhtml">Link</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/addBuyable.xhtml">addBuyable</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/setQuantity.xhtml">setQuantity</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/decrementBuyable.xhtml">decrementBuyable</a>()
                    </li><li>public boolean <a title="ShoppingCart" href="../classes/ShoppingCart/deleteBuyable.xhtml">deleteBuyable</a>()
                    </li><li>protected boolean <a title="ShoppingCart" href="../classes/ShoppingCart/prepareOrderItem.xhtml">prepareOrderItem</a>()
                    </li><li>protected Integer <a title="ShoppingCart" href="../classes/ShoppingCart/prepareQuantity.xhtml">prepareQuantity</a>()
                    </li><li>public OrderItem <a title="ShoppingCart" href="../classes/ShoppingCart/findOrMakeItem.xhtml">findOrMakeItem</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/submit.xhtml">submit</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/save.xhtml">save</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/clear.xhtml">clear</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/reset.xhtml">reset</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/removeModifier.xhtml">removeModifier</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/addModifier.xhtml">addModifier</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/loadOrder.xhtml">loadOrder</a>()
                    </li><li>public DataObject(Order) <a title="ShoppingCart" href="../classes/ShoppingCart/copyOrder.xhtml">copyOrder</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setCountry.xhtml">setCountry</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setRegion.xhtml">setRegion</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setCurrency.xhtml">setCurrency</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/debug.xhtml">debug</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/addMessage.xhtml">addMessage</a>()
                    </li><li>protected OrderItem <a title="ShoppingCart" href="../classes/ShoppingCart/getExistingItem.xhtml">getExistingItem</a>()
                    </li><li>protected cleaned <a title="ShoppingCart" href="../classes/ShoppingCart/cleanParameters.xhtml">cleanParameters</a>()
                    </li><li>protected void <a title="ShoppingCart" href="../classes/ShoppingCart/parametersToSQL.xhtml">parametersToSQL</a>()
                    </li><li>public array <a title="ShoppingCart" href="../classes/ShoppingCart/getMessages.xhtml">getMessages</a>()
                    </li><li>protected array <a title="ShoppingCart" href="../classes/ShoppingCart/StoreMessagesInSession.xhtml">StoreMessagesInSession</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/setMessageAndReturn.xhtml">setMessageAndReturn</a>()
                    </li><li>protected EcommerceDBConfig <a title="ShoppingCart" href="../classes/ShoppingCart/EcomConfig.xhtml">EcomConfig</a>()
                    </li><li>protected String <a title="ShoppingCart" href="../classes/ShoppingCart/sessionVariableName.xhtml">sessionVariableName</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>Object</li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">99+</td>
            <td>- does this need to be public????</td>
          </tr>
          <tr>
            <td class="nummeric">396+</td>
            <td>: what does this method do???</td>
          </tr>
          <tr>
            <td class="nummeric">556</td>
            <td>how to handle existing order</td>
          </tr>
          <tr>
            <td class="nummeric">557</td>
            <td>permission check - does this belong to another member? ...or should permission be assumed already?</td>
          </tr>
          <tr>
            <td class="nummeric">803</td>
            <td>remove the awkward replace</td>
          </tr>
          <tr>
            <td class="nummeric">935</td>
            <td>handle passing back multiple messages</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="session_variable_names"><strong>$session_variable_names</strong>
                —
                <a title="Array" href="../classes/Array.xhtml">Array</a><br/><span class="indent">List of names that can be used as session variables.</span></li>
            <li id="singletoncart"><strong>$singletoncart</strong>
                —
                <a title="Object" href="../classes/Object.xhtml">Object</a><br/><span class="indent">This is where we hold the (singleton) Shoppingcart</span></li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="messages"><strong>$messages</strong>
                —
                <a title="Array" href="../classes/Array.xhtml">Array</a><br/><span class="indent">Feedback message to user (e.g. cart updated, could not delete item, someone in standing behind you).</span></li>
            <li id="order"><strong>$order</strong>
                —
                <a title="Object" href="../classes/Object.xhtml">Object</a><br/><span class="indent">stores a reference to the current order object</span></li>
            <li id="requireSavedOrder"><strong>$requireSavedOrder</strong>
                —
                <a title="Boolean" href="../classes/Boolean.xhtml">Boolean</a><br/><span class="indent">This variable is set to YES when we actually need an order (i.e. write it)</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="EcomConfig">
              <a title="ShoppingCart" href="../classes/ShoppingCart/EcomConfig.xhtml">EcomConfig()</a>
            </li>
            <li id="StoreMessagesInSession"><a title="ShoppingCart" href="../classes/ShoppingCart/StoreMessagesInSession.xhtml">StoreMessagesInSession()</a>
                — Saves current messages in session for retrieving them later.</li>
            <li id="cleanParameters"><a title="ShoppingCart" href="../classes/ShoppingCart/cleanParameters.xhtml">cleanParameters()</a>
                — Removes parameters that aren't in the default array, merges with default parameters, and converts raw2SQL.</li>
            <li id="getExistingItem"><a title="ShoppingCart" href="../classes/ShoppingCart/getExistingItem.xhtml">getExistingItem()</a>
                — Gets an existing order item based on buyable and passed parameters</li>
            <li id="parametersToSQL">
              <a title="ShoppingCart" href="../classes/ShoppingCart/parametersToSQL.xhtml">parametersToSQL()</a>
            </li>
            <li id="prepareOrderItem"><a title="ShoppingCart" href="../classes/ShoppingCart/prepareOrderItem.xhtml">prepareOrderItem()</a>
                — Checks and prepares variables for a quantity change (add, edit, remove) for an Order Item.</li>
            <li id="prepareQuantity">
              <a title="ShoppingCart" href="../classes/ShoppingCart/prepareQuantity.xhtml">prepareQuantity()</a>
            </li>
            <li id="sessionVariableName"><a title="ShoppingCart" href="../classes/ShoppingCart/sessionVariableName.xhtml">sessionVariableName()</a>
                — Return the name of the session variable that should be used.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="Link"><a title="ShoppingCart" href="../classes/ShoppingCart/Link.xhtml">Link()</a>
                — Allows access to the current order from anywhere in the code..</li>
            <li id="addBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/addBuyable.xhtml">addBuyable()</a>
                — Adds any number of items to the cart.</li>
            <li id="addMessage"><a title="ShoppingCart" href="../classes/ShoppingCart/addMessage.xhtml">addMessage()</a>
                — Stores a message that can later be returned via ajax or to $form-&gt;sessionMessage();</li>
            <li id="addModifier"><a title="ShoppingCart" href="../classes/ShoppingCart/addModifier.xhtml">addModifier()</a>
                — Removes a modifier from the cart</li>
            <li id="clear"><a title="ShoppingCart" href="../classes/ShoppingCart/clear.xhtml">clear()</a>
                — Clears the cart contents completely by removing the orderID from session, and thus creating a new cart on next request.</li>
            <li id="copyOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/copyOrder.xhtml">copyOrder()</a>
                — NOTE: tried to copy part to the Order Class - but that was not much of a go-er.</li>
            <li id="currentOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/currentOrder.xhtml">currentOrder()</a>
                — Gets or creates the current order.</li>
            <li id="current_order"><a title="ShoppingCart" href="../classes/ShoppingCart/current_order.xhtml">current_order()</a>
                — Allows access to the current order from anywhere in the code..</li>
            <li id="debug"><a title="ShoppingCart" href="../classes/ShoppingCart/debug.xhtml">debug()</a>
                — Produces a debug of the shopping cart.</li>
            <li id="decrementBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/decrementBuyable.xhtml">decrementBuyable()</a>
                — Removes any number of items from the cart.</li>
            <li id="deleteBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/deleteBuyable.xhtml">deleteBuyable()</a>
                — Delete item from the cart.</li>
            <li id="findOrMakeItem"><a title="ShoppingCart" href="../classes/ShoppingCart/findOrMakeItem.xhtml">findOrMakeItem()</a>
                — Helper function for making / retrieving order items.</li>
            <li id="getMessages"><a title="ShoppingCart" href="../classes/ShoppingCart/getMessages.xhtml">getMessages()</a>
                — Retrieves all good, bad, and ugly messages that have been produced during the current request.</li>
            <li id="loadOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/loadOrder.xhtml">loadOrder()</a>
                — Sets an order as the current order.</li>
            <li id="removeModifier"><a title="ShoppingCart" href="../classes/ShoppingCart/removeModifier.xhtml">removeModifier()</a>
                — Removes a modifier from the cart It does not actually remove it, but it just sets it as "removed", to avoid that it is being added again.</li>
            <li id="reset"><a title="ShoppingCart" href="../classes/ShoppingCart/reset.xhtml">reset()</a>
                — alias for clear</li>
            <li id="save">
              <a title="ShoppingCart" href="../classes/ShoppingCart/save.xhtml">save()</a>
            </li>
            <li id="setCountry"><a title="ShoppingCart" href="../classes/ShoppingCart/setCountry.xhtml">setCountry()</a>
                — sets country in order so that modifiers can be recalculated, etc...</li>
            <li id="setCurrency"><a title="ShoppingCart" href="../classes/ShoppingCart/setCurrency.xhtml">setCurrency()</a>
                — sets the display currency for the cart.</li>
            <li id="setMessageAndReturn"><a title="ShoppingCart" href="../classes/ShoppingCart/setMessageAndReturn.xhtml">setMessageAndReturn()</a>
                — This method is used to return data after an ajax call was made.</li>
            <li id="setQuantity"><a title="ShoppingCart" href="../classes/ShoppingCart/setQuantity.xhtml">setQuantity()</a>
                — Sets quantity for an item in the cart.</li>
            <li id="setRegion"><a title="ShoppingCart" href="../classes/ShoppingCart/setRegion.xhtml">setRegion()</a>
                — sets region in order so that modifiers can be recalculated, etc...</li>
            <li id="singleton"><a title="ShoppingCart" href="../classes/ShoppingCart/singleton.xhtml">singleton()</a>
                — Allows access to the cart from anywhere in code.</li>
            <li id="submit"><a title="ShoppingCart" href="../classes/ShoppingCart/submit.xhtml">submit()</a>
                — submit the order so that it is no longer available in the cart but will continue its journey through the order steps.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.1.1 - Copyright (C) 2010 - 2016 by Arne Blankerts</span>
    </footer>
  </body>
</html>
