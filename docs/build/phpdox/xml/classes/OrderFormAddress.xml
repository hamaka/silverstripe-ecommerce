<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="OrderFormAddress" namespace="" name="OrderFormAddress" abstract="false" final="false" start="15" end="650">
  <file path="/var/www/3.2.photowarehouse.co.nz/ecommerce/code/forms" file="OrderFormAddress.php" realpath="/var/www/3.2.photowarehouse.co.nz/ecommerce/code/forms/OrderFormAddress.php" size="22011" time="2016-02-03T12:12:35+13:00" unixtime="1454454755" sha1="f2b7f82f78f0f44e5e8be51a7da6b5fd4b772098" relative="code/forms/OrderFormAddress.php"/>
  <docblock>
    <description compact="This class is the form for editing the Order Addresses.">It is also used to link the order to a member.</description>
    <authors value=": Nicolaas [at] Sunny Side Up .co.nz"/>
    <package value=": ecommerce"/>
    <sub value="-package: forms"/>
    <inspiration value=": Silverstripe Ltd, Jeremy"/>
  </docblock>
  <extends full="Form" namespace="" name="Form" unresolved="true"/>
  <member name="orderMember" type="{unknown}" default="" constant="null" visibility="protected" static="false" line="23">
    <docblock>
      <description compact="the member attached to the order this is not always the same as the loggedInMember"/>
      <var description="(Member)" type="object">
        <type full="Object" namespace="" name="Object"/>
      </var>
    </docblock>
  </member>
  <member name="loggedInMember" type="{unknown}" default="" constant="null" visibility="protected" static="false" line="30">
    <docblock>
      <description compact="the logged in member, if any this is not always the same as the orderMember"/>
      <var description="(Member)" type="object">
        <type full="Object" namespace="" name="Object"/>
      </var>
    </docblock>
  </member>
  <member name="newlyCreatedMemberID" type="integer" default="0" visibility="protected" static="false" line="36">
    <docblock>
      <description compact="ID of the member that has just been created."/>
      <var type="object">
        <type full="Int" namespace="" name="Int"/>
      </var>
    </docblock>
  </member>
  <member name="order" type="{unknown}" default="" constant="null" visibility="protected" static="false" line="42">
    <docblock>
      <description compact="ID of the member that has just been created."/>
      <var type="object">
        <type full="Order" namespace="" name="Order"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="49" end="231" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object">
        <type full="Controller" namespace="" name="Controller"/>
      </param>
      <param type="object">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="controller" byreference="false" type="object">
      <type full="Controller" namespace="" name="Controller"/>
    </parameter>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="set basics" line="51"/>
      <comment value="requirements" line="54"/>
      <comment value="LEAVE HERE - NOT EASY TO INCLUDE VIA TEMPLATE" line="55"/>
      <comment value="________________ 1) Order + Member + Address fields" line="60"/>
      <comment value="find member" line="62"/>
      <comment value="strange security situation..." line="67"/>
      <comment value="member fields" line="78"/>
      <comment value="billing address field" line="85"/>
      <comment value="shipping address field" line="91"/>
      <comment value="________________  2) Log in / vs Create Account fields - RIGHT-HAND-SIDE fields" line="117"/>
      <comment value="to do: simplify" line="122"/>
      <comment value="________________  5) Put all the fields in one FieldList" line="171"/>
      <comment value="________________  6) Actions and required fields creation + Final Form construction" line="178"/>
      <comment value="extensions need to be set after __construct" line="188"/>
      <comment value="extension point" line="189"/>
      <comment value="this needs to come after the extension calls" line="194"/>
      <comment value="________________  7)  Load saved data" line="202"/>
      <comment value="we do this first so that Billing and Shipping Address can override this..." line="204"/>
      <comment value="allow updating via decoration" line="222"/>
    </inline>
  </constructor>
  <method name="orderHasFullyOperationalMember" start="241" end="250" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Is there a member that is fully operational? - saved - has password"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <inline>
      <comment value="orderMember is Created in __CONSTRUCT" line="242"/>
    </inline>
  </method>
  <method name="orderDoesNotHaveFullyOperationalMember" start="256" end="258" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Opposite of orderHasFullyOperationalMember method."/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="saveAddress" start="272" end="344" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Process the items in the shopping cart from session, creating a new {@link Order} record, and updating the customer's details {@link Member} record."><link value="Payment"/> instance is created, linked to the order,
and payment is processed <link xmlns="http://xml.phpdox.net/src" value="Payment::processPayment()"/></description>
      <param description="Form request data submitted from OrderForm" type="array" variable="$data"/>
      <param description="Form object for this action" type="object" variable="$form">
        <type full="Form" namespace="" name="Form"/>
      </param>
      <param description="Request object for this action" type="object" variable="$request">
        <type full="HTTPRequest" namespace="" name="HTTPRequest"/>
      </param>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="form" byreference="false" type="object">
      <type full="Form" namespace="" name="Form"/>
    </parameter>
    <parameter name="request" byreference="false" type="object">
      <type full="SS_HTTPRequest" namespace="" name="SS_HTTPRequest"/>
    </parameter>
    <inline>
      <comment value="check for cart items" line="277"/>
      <comment value="----------- START BY SAVING INTO ORDER" line="290"/>
      <comment value="----------- --------------------------------" line="292"/>
      <comment value="MEMBER" line="294"/>
      <comment value="BILLING ADDRESS" line="314"/>
      <comment value="SHIPPING ADDRESS" line="321"/>
      <comment value="SAVE ORDER" line="334"/>
      <comment value="----------------- CLEAR OLD DATA ------------------------------" line="337"/>
      <comment value="clears the stored session form data that might have been needed if validation failed" line="338"/>
      <comment value="-----------------------------------------------" line="339"/>
    </inline>
  </method>
  <method name="saveDataToSession" start="350" end="358" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="saves the form into session"/>
      <param description="- data from form." type="object" variable="$data">
        <type full="Array" namespace="" name="Array"/>
      </param>
    </docblock>
  </method>
  <method name="clearSessionData" start="363" end="366" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="clear the form data (after the form has been submitted and processed)"/>
    </docblock>
  </method>
  <method name="createOrFindMember" start="385" end="452" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Works out the most likely member for the order after submission of the form.">It returns a member if appropriate.
1. does the order already have a member that is not a shop-admin - if so - DONE.
2. shop allows creation of member? - if NOT return NULL
A. is the logged in member the shop admin placing an order on behalf of someone else?
A1. is the email entered different from the admin email?
A2. attach to other member as new one or existing one.
3. can the entered data be used? - if
4. is there no member logged in yet? - If there is one return null, member is already linked to order.
5. find member from data entered (even if not logged in)
6. At this stage, if we dont have a member, we will create one!
7. We do one last check to see if we are allowed to create one</description>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return description="| Null" type="object">
        <type full="Member" namespace="" name="Member"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <inline>
      <comment value="get the best available from order." line="386"/>
      <comment value="1. does the order already have a member" line="389"/>
    </inline>
  </method>
  <method name="memberShouldBeCreated" start="462" end="488" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Should a new member be created?"/>
      <todo value=": explain why password needs to be more than three characters..."/>
      <todo value=": create class that checks if password is good enough"/>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <inline>
      <comment value="shop admin and" line="463"/>
      <comment value="data entered does not match shop admin and" line="464"/>
      <comment value="data entered does not match existing member..." line="465"/>
      <comment value="TRUE!" line="466"/>
      <comment value="defaults to FALSE..." line="486"/>
    </inline>
  </method>
  <method name="memberShouldBeSaved" start="494" end="520" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <inline>
      <comment value="new members always need to be saved" line="496"/>
      <comment value="existing logged in members need to be saved if they are updateable" line="502"/>
      <comment value="AND do not match someone else..." line="503"/>
      <comment value="logged in member is shop admin and members are updateable..." line="510"/>
    </inline>
  </method>
  <method name="memberShouldBeLoggedIn" start="531" end="538" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="returns TRUE if - the member is not logged in - the member is new AND - the password is valid"/>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
  </method>
  <method name="uniqueMemberFieldCanBeUsed" start="557" end="577" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns TRUE if - there is no existing member with the same value in the unique field - OR the member is not logged in.">- OR the member is a Shop Admin (we assume they are placing an order on behalf of someone else).
returns FALSE if
- the unique field already exists in another member
- AND the member being "tested" is already logged in...
in that case the logged in member tries to take on another identity.
If you are not logged BUT the the unique field is used by an existing member then we can still
use the field - we just CAN NOT log in the member.
This method needs to be public because it is used by the OrderForm_Validator (see below).</description>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
  </method>
  <method name="anotherExistingMemberWithSameUniqueFieldValue" start="585" end="612" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="returns existing member if it already exists and it is not the logged-in one.">Based on the unique field (email)).</description>
      <param description="- form data - should include $data[uniqueField....] - e.g. $data[&quot;Email&quot;]" type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return description="| DataObject (Member)" type="object">
        <type full="Null" namespace="" name="Null"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <inline>
      <comment value="The check below covers both Scenario 3 and 4...." line="587"/>
    </inline>
  </method>
  <method name="enteredEmailAddressDoesNotMatchLoggedInUser" start="622" end="638" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="returns the email if - user is logged in already - user's email in DB does not match email entered."/>
      <param type="object">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return description="| false" type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
  <method name="validPasswordHasBeenEntered" start="645" end="647" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Check if the password is good enough"/>
      <param description="(from form)" type="object">
        <type full="data" namespace="" name="data"/>
      </param>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
</class>
